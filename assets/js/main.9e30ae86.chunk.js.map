{"version":3,"sources":["components/antd/Form.js","actions/types/index.ts","actions/cominovelActions.ts","actions/seasonActions.ts","bootstrap/Setup.tsx","components/Advanced.tsx","helpers/TermHelpers.ts","components/nested/Artists.tsx","components/nested/Authors.tsx","components/nested/Countries.tsx","components/nested/Genres.tsx","components/nested/Release.tsx","components/BasicInfo.tsx","components/Chapters.tsx","components/Composer.tsx","components/Seasons.tsx","Cominovel.tsx","App.tsx","serviceWorker.ts","epics/cominovelEpics.ts","actions/appActions.ts","epics/index.ts","epics/seasonEpics.ts","epics/cominovelTaxonomies.ts","reducers/appReducer.ts","reducers/cominovelReducer.ts","reducers/cominovelTaxonomy.ts","reducers/seasonReducer.ts","reducers/index.ts","store.ts","index.tsx"],"names":["Object","defineProperty","exports","value","default","React","obj","__esModule","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","_classnames","_interopRequireDefault","_createDOMForm","_createFormField","_omit","_configProvider","_warning","_FormItem","_constants","_context","WeakMap","_typeof","Symbol","iterator","constructor","_extends","assign","target","i","arguments","length","source","apply","this","_defineProperty","enumerable","configurable","writable","_defineProperties","props","descriptor","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","Form","_React$Component","_this","instance","Constructor","TypeError","_classCallCheck","renderForm","_ref","_classNames","getPrefixCls","_this$props","customizePrefixCls","prefixCls","hideRequiredMark","_this$props$className","className","layout","formClassName","concat","formProps","createElement","form","protoProps","staticProps","subClass","superClass","create","_inherits","_this$props2","wrapperCol","labelAlign","labelCol","colon","Provider","vertical","ConfigConsumer","Component","defaultProps","onSubmit","e","preventDefault","Item","createFormField","options","undefined","fieldNameProp","fieldMetaProp","FIELD_META_PROP","fieldDataProp","FIELD_DATA_PROP","FETCH_COMINOVEL","FETCH_COMINOVEL_FULLFILLED","FETCH_SEASONS","FETCH_SEASONS_FULLFILLED","FETCH_TAXONOMY_TERMS","FETCH_TAXONOMY_TERMS_FULLFILLED","fetchCominovel","id","payload","type","fetchTaxonomyTerms","taxonomy","keyword","treeView","fetchSeasons","Setup","window","Cominovel","currentID","Advanced","title","subTitle","span","label","Group","style","width","name","terms","ret","forEach","term","push","Artists","state","selectedArtists","handleChange","setState","nextProps","index","prefix","artists","map","artist","Option","renderItemKey","artistId","showSearch","optionFilterProp","placeholder","onChange","renderCominovelArtists","renderSelectedArtist","connect","cmn_artist","TermHelpers","cominovel","info","cmn_artist_terms","dispatch","bindActionCreators","Authors","selectedAuthors","handlerChange","authors","author","renderCominovelAuthors","renderSelectedAuthors","cmn_author","cmn_author_terms","Countries","selectedCountries","countries","country","renderCominovelCountries","renderSelectedCountries","cmn_country","cmn_country_terms","Genres","selectedGenres","genre","genres","renderCominovelGenres","renderSelectedGenres","genre_terms","Release","mode","release","cmn_release_terms","TextArea","Input","formItemLayout","sm","xs","BasicInfo","hidden","alternative_name","post_excerpt","rows","Chapters","extra","columns","dataSource","data","dataIndex","editable","render","text","imageUrl","uploadButton","listType","showUploadList","action","record","href","icon","marginRight","createdAt","no","season","thumbnail","Composer","handleSubmit","validateFields","err","values","console","log","normFile","Array","isArray","fileList","getFieldDecorator","initialValue","disabled","filterOption","input","option","children","toLowerCase","indexOf","Button","valuePropName","getValueFromEvent","Dragger","offset","htmlType","WrappedComposer","Seasons","remove","k","keys","getFieldValue","setFieldsValue","filter","add","nextKeys","saveSeason","required","rules","message","whitespace","validateTrigger","onClick","renderSeasons","size","WrappedDynamicFieldSet","seasons","TabPane","Tabs","initState","chapterLoaded","seasonLoaded","handleModeChange","tab","renderBasicInfos","renderChapters","renderAdvanced","renderComposer","bootstrap","isLoaded","defaultActiveKey","tabPosition","app","App","locale","Boolean","location","hostname","match","fetchCominovelEpic","action$","pipe","ofType","mergeMap","from","ajax","getJSON","endpoints","fetchComic","replace","response","store","combineEpics","wpv2","fetchTaxonomyTermsFullFilled","ID","audult","badge","chapters","cmn_status_terms","parent","post_content","post_modified","post_name","post_parent","post_status","post_title","post_type","rating_system","short_description","TaxonomyTerm","reducers","combineReducers","previousState","previewState","epicMiddleware","createEpicMiddleware","createStore","rootReducers","applyMiddleware","run","rootEpics","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9e30ae86.chunk.js","sourcesContent":["/* eslint-disable no-func-assign */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true,\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _createDOMForm = _interopRequireDefault(require(\"rc-form/lib/createDOMForm\"));\n\nvar _createFormField = _interopRequireDefault(require(\"rc-form/lib/createFormField\"));\n\nvar _omit = _interopRequireDefault(require(\"omit.js\"));\n\nvar _configProvider = require(\"antd/lib/config-provider\");\n\nvar _type = require(\"antd/lib/_util/type\");\n\nvar _warning = _interopRequireDefault(require(\"antd/lib/_util/warning\"));\n\nvar _FormItem = _interopRequireDefault(require(\"antd/lib/form/FormItem\"));\n\nvar _constants = require(\"antd/lib/form/constants\");\n\nvar _context = _interopRequireDefault(require(\"antd/lib/form/context\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") { return null; } var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) { descriptor.writable = true; } Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) { _defineProperties(Constructor.prototype, protoProps); } if (staticProps) { _defineProperties(Constructor, staticProps); } return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) { _setPrototypeOf(subClass, superClass); } }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar FormLayouts = (0, _type.tuple)(\"horizontal\", \"inline\", \"vertical\");\n\nvar Form =\n/*#__PURE__*/\nfunction(_React$Component) {\n  _inherits(Form, _React$Component);\n\n  function Form(props) {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Form).call(this, props));\n\n    _this.renderForm = function(_ref) {\n      var _classNames;\n\n      var getPrefixCls = _ref.getPrefixCls;\n      var _this$props = _this.props,\n          customizePrefixCls = _this$props.prefixCls,\n          hideRequiredMark = _this$props.hideRequiredMark,\n          _this$props$className = _this$props.className,\n          className = _this$props$className === void 0 ? \"\" : _this$props$className,\n          layout = _this$props.layout;\n      var prefixCls = getPrefixCls(\"form\", customizePrefixCls);\n      var formClassName = (0, _classnames.default)(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-horizontal\"), layout === \"horizontal\"), _defineProperty(_classNames, \"\".concat(prefixCls, \"-vertical\"), layout === \"vertical\"), _defineProperty(_classNames, \"\".concat(prefixCls, \"-inline\"), layout === \"inline\"), _defineProperty(_classNames, \"\".concat(prefixCls, \"-hide-required-mark\"), hideRequiredMark), _classNames), className);\n      var formProps = (0, _omit.default)(_this.props, [\"prefixCls\", \"className\", \"layout\", \"form\", \"hideRequiredMark\", \"wrapperCol\", \"labelAlign\", \"labelCol\", \"colon\"]);\n      return React.createElement(\"div\", _extends({}, formProps, {\n        className: formClassName,\n      }));\n    };\n\n    (0, _warning.default)(!props.form, \"Form\", \"It is unnecessary to pass `form` to `Form` after antd@1.7.0.\");\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          wrapperCol = _this$props2.wrapperCol,\n          labelAlign = _this$props2.labelAlign,\n          labelCol = _this$props2.labelCol,\n          layout = _this$props2.layout,\n          colon = _this$props2.colon;\n      return React.createElement(_context.default.Provider, {\n        value: {\n          wrapperCol: wrapperCol,\n          labelAlign: labelAlign,\n          labelCol: labelCol,\n          vertical: layout === \"vertical\",\n          colon: colon,\n        },\n      }, React.createElement(_configProvider.ConfigConsumer, null, this.renderForm));\n    },\n  }]);\n\n  return Form;\n}(React.Component);\n\nexports.default = Form;\nForm.defaultProps = {\n  colon: true,\n  layout: \"horizontal\",\n  hideRequiredMark: false,\n  onSubmit: function onSubmit(e) {\n    e.preventDefault();\n  },\n};\nForm.propTypes = {\n  prefixCls: PropTypes.string,\n  layout: PropTypes.oneOf(FormLayouts),\n  children: PropTypes.any,\n  onSubmit: PropTypes.func,\n  hideRequiredMark: PropTypes.bool,\n  colon: PropTypes.bool,\n};\nForm.Item = _FormItem.default;\nForm.createFormField = _createFormField.default;\n\nForm.create = function create() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return (0, _createDOMForm.default)(_extends(_extends({\n    fieldNameProp: \"id\",\n  }, options), {\n    fieldMetaProp: _constants.FIELD_META_PROP,\n    fieldDataProp: _constants.FIELD_DATA_PROP,\n  }));\n};\n//# sourceMappingURL=Form.js.map\n","export const IS_LOADED = \"IS_LOADED\";\nexport const FETCH_COMINOVEL = \"FETCH_COMINOVEL\";\nexport const FETCH_COMINOVEL_FULLFILLED = \"FETCH_COMINOVEL_FULLFILLED\";\nexport const FETCH_SEASONS = \"FETCH_SEASONS\";\nexport const FETCH_SEASONS_FULLFILLED = \"FETCH_SEASONS_FULLFILLED\";\nexport const FETCH_TAXONOMY_TERMS = \"FETCH_TAXONOMY_TERMS\";\nexport const FETCH_TAXONOMY_TERMS_FULLFILLED = \"FETCH_TAXONOMY_TERMS_FULLFILLED\";\n","import {\n    FETCH_COMINOVEL,\n    FETCH_COMINOVEL_FULLFILLED,\n    FETCH_TAXONOMY_TERMS,\n    FETCH_TAXONOMY_TERMS_FULLFILLED,\n} from \"./types\";\n\nexport function fetchCominovel(id: number) {\n    return {\n        payload: id,\n        type: FETCH_COMINOVEL,\n    };\n}\n\nexport function fetchCominovelData(payload: any) {\n    return {\n        payload,\n        type: FETCH_COMINOVEL_FULLFILLED,\n    };\n}\n\nexport function fetchTaxonomyTerms(\n    taxonomy: string = \"genre\",\n    keyword: string | null = null,\n    treeView: boolean = false,\n) {\n    return {\n        keyword,\n        taxonomy,\n        treeView,\n        type: FETCH_TAXONOMY_TERMS,\n    };\n}\n\nexport function fetchTaxonomyTermsFullFilled(payload: any, taxonomy: string = \"genre\", keyword: string = \"\") {\n    return {\n        keyword,\n        payload,\n        taxonomy,\n        type: FETCH_TAXONOMY_TERMS_FULLFILLED,\n    };\n}\n","import { ISeasonState } from \"../reducers/seasonReducer\";\nimport { FETCH_SEASONS, FETCH_SEASONS_FULLFILLED } from \"./types\";\n\nexport function fetchSeasons(id: number) {\n    return {\n        payload: id,\n        type: FETCH_SEASONS,\n    };\n}\n\nexport function fetchSeasonsFullFilled(seasons: ISeasonState) {\n    return {\n        payload: seasons,\n        type: FETCH_SEASONS_FULLFILLED,\n    };\n}\n","import \"antd/dist/antd.css\";\nimport \"../assets/admin/css/common.css\";\n\nclass Setup {\n  public static bootstrap() {\n    // Setup environment\n    window.Cominovel = window.Cominovel || {};\n    window.Cominovel.currentID  = window.Cominovel.currentID || 14395; // This line is trick use for develop\n  }\n}\n\nexport default Setup;\n","import { Checkbox, Col, PageHeader, Row } from \"antd\";\nimport React, { Component } from \"react\";\nimport Form from \"./antd/Form\";\n\ninterface IProps {\n  form: any;\n}\n\nclass Advanced extends Component {\n  public render() {\n    const formItemLayout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 14 },\n    };\n\n    return (\n      <div className=\"cominovel-tab-content\">\n        <PageHeader title=\"Advanced\" subTitle=\"Các thông tin nâng cao\" />\n        <Form\n          {...formItemLayout}\n          labelAlign=\"left\"\n        >\n          <Form.Item label=\"Adult content\">\n            <Checkbox.Group style={{ width: \"100%\" }} name=\"rating_system\">\n              <Row>\n                <Col span={8}>\n                  <Checkbox value=\"X\">Include</Checkbox>\n                </Col>\n              </Row>\n            </Checkbox.Group>,\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default Advanced;\n","import { ITermType } from \"../interfaces/WordPressProps\";\n\nconst extractTermIds = (terms: ITermType[]) => {\n  const ret: number[] = [];\n  terms.forEach((term: ITermType) => {\n    ret.push(term.id);\n  });\n  return ret;\n};\n\nexport default {\n  extractTermIds,\n};\n","import { Input, Select } from \"antd\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport { fetchTaxonomyTerms } from \"../../actions\";\nimport { TAXONOMY_ARTIST } from \"../../common/constants\";\nimport { TermHelpers } from \"../../helpers\";\nimport { ITermType } from \"../../interfaces/WordPressProps\";\nimport { IRootState} from \"../../reducers\";\nimport Form from \"../antd/Form\";\n\nconst { Item } = Form;\n\ntype IProps = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>;\ninterface IState {\n  selectedArtists: number[];\n}\n\nclass Artists extends Component<IProps, IState> {\n  public state: IState = {\n    selectedArtists: this.props.selectedArtists,\n  };\n\n  public componentDidMount() {\n    this.props.fetchTaxonomyTerms(\"cmn_artist\");\n  }\n\n  public UNSAFE_componentWillReceiveProps(nextProps: IProps) {\n    if (nextProps.selectedArtists !== this.props.selectedArtists) {\n      this.setState({\n        selectedArtists: nextProps.selectedArtists,\n      });\n    }\n  }\n\n  public handleChange = (value: any) => {\n    this.setState({\n      selectedArtists: [value],\n    });\n  }\n\n  public renderItemKey(index: number, prefix: string = \"artist\") {\n    return `${prefix}${index}`;\n  }\n\n  public renderCominovelArtists() {\n    if (typeof this.props.artists === \"object\") {\n      return this.props.artists.map((artist: ITermType, index: number) => {\n        return (\n          <Select.Option\n            key={this.renderItemKey(index, \"artist_option\")}\n            value={artist.id}\n          >\n            {artist.name}\n          </Select.Option>\n        );\n      });\n    }\n    return null;\n  }\n\n  public renderSelectedArtist() {\n    const taxName = \"tax_input[\" + TAXONOMY_ARTIST + \"][]\";\n    return this.state.selectedArtists.map((artistId: number, index: number) => {\n      return(\n        <Input\n          key={this.renderItemKey(index, \"artist_option\")}\n          type=\"hidden\"\n          name={taxName}\n          value={artistId}\n        />\n      );\n    });\n  }\n\n  public render() {\n    return (\n      <Item label=\"Artists\">\n        <Select\n          showSearch\n          optionFilterProp=\"children\"\n          placeholder=\"Tiểu Tôn Tuyết Đăng\"\n          style={{ width: \"100%\" }}\n          onChange={this.handleChange}\n          value={this.state.selectedArtists[0] || undefined}\n        >\n        {this.renderCominovelArtists()}\n        </Select>\n        {this.renderSelectedArtist()}\n      </Item>\n    );\n  }\n}\n\nconst mapStateToProps = (state: IRootState) => ({\n  artists: state.terms.cmn_artist || [],\n  selectedArtists: TermHelpers.extractTermIds(state.cominovel.info.cmn_artist_terms || []),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({\n  fetchTaxonomyTerms,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Artists);\n","import { Input, Select } from \"antd\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { AnyAction, bindActionCreators, Dispatch } from \"redux\";\nimport { fetchTaxonomyTerms } from \"../../actions\";\nimport { TAXONOMY_AUTHOR } from \"../../common/constants\";\nimport { TermHelpers } from \"../../helpers\";\nimport { ITermType } from \"../../interfaces/WordPressProps\";\nimport { IRootState } from \"../../reducers\";\nimport Form from \"../antd/Form\";\n\ntype IProps = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>;\ninterface IState {\n  selectedAuthors: number[];\n}\n\nclass Authors extends Component<IProps, IState> {\n  public state: IState = {\n    selectedAuthors: this.props.selectedAuthors,\n  };\n\n  public componentDidMount() {\n    this.props.fetchTaxonomyTerms(\"cmn_author\");\n  }\n\n  public UNSAFE_componentWillReceiveProps(nextProps: IProps) {\n    if (nextProps.selectedAuthors !== this.props.selectedAuthors) {\n      this.setState({\n        selectedAuthors: nextProps.selectedAuthors,\n      });\n    }\n  }\n\n  public handlerChange = (value: number) => {\n    this.setState({\n      selectedAuthors: [value],\n    });\n  }\n\n  public renderItemKey(index: number, prefix: string = \"author\") {\n    return `${prefix}${index}`;\n  }\n\n  public renderCominovelAuthors() {\n    if (typeof this.props.authors === \"object\") {\n      return this.props.authors.map((author: ITermType, index: number) => {\n        return (\n          <Select.Option\n            key={this.renderItemKey(index)}\n            value={author.id}\n          >\n            {author.name}\n          </Select.Option>\n        );\n      });\n    }\n    return null;\n  }\n\n  public renderSelectedAuthors() {\n    const taxName = \"tax_input[\" + TAXONOMY_AUTHOR + \"][]\";\n    return this.state.selectedAuthors.map((author: number, index: number) => {\n      return (\n        <Input\n          type=\"hidden\"\n          key={this.renderItemKey(index, \"author_option\")}\n          name={taxName}\n          value={author}\n        />\n      );\n    });\n  }\n\n  public render() {\n    return (\n      <Form.Item\n      label=\"Authors\"\n    >\n      <Select\n        placeholder=\"Choose or add author\"\n        style={{ width: \"100%\" }}\n        value={this.state.selectedAuthors[0]}\n        onChange={this.handlerChange}\n      >\n        {this.renderCominovelAuthors()}\n      </Select>\n      {this.renderSelectedAuthors()}\n    </Form.Item>\n\n    );\n  }\n}\n\nconst mapStateToProps = (state: IRootState) => ({\n  authors: state.terms.cmn_author || [],\n  selectedAuthors: TermHelpers.extractTermIds(state.cominovel.info.cmn_author_terms || []),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) => bindActionCreators({\n  fetchTaxonomyTerms,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Authors);\n","import { Input, Select } from \"antd\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { AnyAction, bindActionCreators, Dispatch } from \"redux\";\nimport { fetchTaxonomyTerms } from \"../../actions\";\nimport { TAXONOMY_COUNTRY } from \"../../common/constants\";\nimport { TermHelpers } from \"../../helpers\";\nimport { ITermType } from \"../../interfaces/WordPressProps\";\nimport { IRootState } from \"../../reducers\";\nimport Form from \"../antd/Form\";\n\ntype IProps = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>;\ninterface IState {\n  selectedCountries: number[];\n}\n\nclass Countries extends Component<IProps, IState> {\n  public state: IState = {\n    selectedCountries: this.props.selectedCountries,\n  };\n\n  public componentDidMount() {\n    this.props.fetchTaxonomyTerms(\"cmn_country\");\n  }\n\n  public UNSAFE_componentWillReceiveProps(nextProps: IProps) {\n    if (nextProps.selectedCountries !== this.props.selectedCountries) {\n      this.setState({\n        selectedCountries: nextProps.selectedCountries,\n      });\n    }\n  }\n\n  public handleChange = (value: number) => {\n    this.setState({\n      selectedCountries: [value],\n    });\n  }\n\n  public renderItemKey(index: number, prefix: string = \"country\") {\n    return `${prefix}${index}`;\n  }\n\n  public renderCominovelCountries() {\n    if (typeof this.props.countries === \"object\") {\n      return this.props.countries.map((country: ITermType, index: number) => {\n        return (\n          <Select.Option\n            key={this.renderItemKey(index)}\n            value={country.id}\n          >\n            {country.name}\n          </Select.Option>\n        );\n      });\n    }\n    return null;\n  }\n\n  public renderSelectedCountries() {\n    const taxName = \"tax_input[\" + TAXONOMY_COUNTRY + \"][]\";\n    return this.state.selectedCountries.map((value: number, index: number) =>  {\n      return (\n        <Input\n          type=\"hidden\"\n          key={this.renderItemKey(index, \"country_value\")}\n          name={ taxName }\n          value={value}\n        />\n      );\n    });\n  }\n\n  public render() {\n    return (\n      <Form.Item\n            label=\"Comic Type\"\n          >\n            <Select\n              placeholder=\"Country or comic types\"\n              style={{ width: 200 }}\n              value={this.state.selectedCountries[0] || undefined}\n              onChange={this.handleChange}\n            >\n              {this.renderCominovelCountries()}\n            </Select>\n            {this.renderSelectedCountries()}\n          </Form.Item>\n    );\n  }\n}\n\nconst mapStateToProps = (state: IRootState) => ({\n  countries: state.terms.cmn_country || [],\n  selectedCountries: TermHelpers.extractTermIds(state.cominovel.info.cmn_country_terms || []),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) => bindActionCreators({\n  fetchTaxonomyTerms,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Countries);\n","import { Input, Select } from \"antd\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { AnyAction, bindActionCreators, Dispatch } from \"redux\";\nimport { fetchTaxonomyTerms } from \"../../actions\";\nimport { TAXONOMY_GENRE } from \"../../common/constants\";\nimport { TermHelpers } from \"../../helpers\";\nimport { ITermType } from \"../../interfaces/WordPressProps\";\nimport { IRootState } from \"../../reducers\";\nimport Form from \"../antd/Form\";\n\nconst { Item } = Form;\n\ntype IProps = ReturnType<typeof mapDispatchToProps> & ReturnType<typeof mapStateToProps>;\ninterface IState {\n  selectedGenres: number[];\n}\n\nclass Genres extends Component<IProps, IState> {\n  public state: IState = {\n    selectedGenres: this.props.selectedGenres,\n  };\n\n  public componentDidMount() {\n    this.props.fetchTaxonomyTerms(\"genre\", null, true);\n  }\n\n  public UNSAFE_componentWillReceiveProps(nextProps: IProps) {\n    if (nextProps.selectedGenres !== this.props.selectedGenres) {\n      this.setState({\n        selectedGenres: nextProps.selectedGenres,\n      });\n    }\n  }\n\n  public handleChange = (value: number) => {\n    this.setState({\n      selectedGenres: [value],\n    });\n  }\n\n  public renderItemKey(index: number, prefix: string = \"genre\") {\n    return `${prefix}${index}`;\n  }\n\n  public renderSelectedGenres() {\n    const taxName = \"tax_input[\" + TAXONOMY_GENRE + \"][]\";\n\n    return this.state.selectedGenres.map((genre: number, index: number) => {\n      return (\n        <Input\n          type=\"hidden\"\n          key={this.renderItemKey(index, \"genre_option\")}\n          name={taxName}\n          value={genre}\n        />\n      );\n    });\n  }\n\n  public renderCominovelGenres() {\n    if (typeof this.props.genres === \"object\") {\n      return this.props.genres.map((genre: ITermType, index: number) => {\n        return (\n          <Select.Option\n            key={this.renderItemKey(index)}\n            value={genre.id}\n          >\n            {genre.name}\n          </Select.Option>\n        );\n      });\n    }\n    return null;\n  }\n\n  public render() {\n    return (\n      <Item label=\"Genres\" >\n        <Select\n          showSearch\n          optionFilterProp=\"children\"\n          placeholder=\"The genre of comic\"\n          style={{ width: 200 }}\n          onChange={this.handleChange}\n          value={this.state.selectedGenres[0] || undefined}\n        >\n          {this.renderCominovelGenres()}\n        </Select>\n        {this.renderSelectedGenres()}\n      </Item>\n    );\n  }\n}\n\nconst mapStateToProps = (state: IRootState) => ({\n  genres: state.terms.genre || [],\n  selectedGenres: TermHelpers.extractTermIds(state.cominovel.info.genre_terms) || [],\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) => bindActionCreators({\n  fetchTaxonomyTerms,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Genres);\n","import { DatePicker} from \"antd\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { IRootState } from \"../../reducers\";\nimport Form from \"../antd/Form\";\n\ntype IProps = ReturnType<typeof mapStateToProps>;\n\nclass Release extends Component<IProps> {\n  public renderFooter() {\n  }\n\n  public render() {\n    return (\n      <Form.Item label=\"Publish Date\">\n        <DatePicker\n          placeholder=\"Select publish date\"\n          mode=\"year\"\n          style={{width: 200}}\n        />\n      </Form.Item>\n    );\n  }\n}\n\nconst mapStateToProps = (state: IRootState) => ({\n  release: state.cominovel.info.cmn_release_terms,\n});\n\nexport default connect(mapStateToProps)(Release);\n","import { Input, PageHeader } from \"antd\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { AnyAction, bindActionCreators, Dispatch } from \"redux\";\nimport { fetchTaxonomyTerms } from \"../actions\";\nimport { ICominovelData } from \"../interfaces/CominovelProps\";\nimport { IRootState } from \"../reducers\";\nimport Form from \"./antd/Form\";\nimport { Artists, Authors, Countries, Genres, Release } from \"./nested\";\n\nconst { Item } = Form;\nconst { TextArea } = Input;\n\ntype IProps = ReturnType<typeof mapStateToProps> & ReturnType <typeof mapDispatchToProps>;\n\ninterface IState extends ICominovelData {\n}\n\nconst formItemLayout = {\n  labelCol: {\n    sm: { span: 5 },\n    xs: { span: 24 },\n  },\n  wrapperCol: {\n    sm: { span: 12 },\n    xs: { span: 24 },\n  },\n};\n\nclass BasicInfo extends Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = props.info;\n  }\n\n  public UNSAFE_componentWillReceiveProps(nextProps: IProps) {\n    if (this.props.info !== nextProps.info) {\n      this.setState(nextProps.info);\n    }\n  }\n\n  public render() {\n    return (\n      <div className=\"cominovel-tab-content\">\n        <PageHeader title=\"Basic Info\" subTitle=\"Đây là các thông tin cơ bản của truyện\" />\n        <Form\n          {...formItemLayout}\n          labelAlign=\"left\"\n        >\n          <Input name=\"cominovel_loaded\" hidden value=\"true\" />\n          <Item\n          label=\"Alternatve Name\"\n          >\n            <Input\n              name=\"alternative_name\"\n              onChange={(e) => this.setState({alternative_name: e.target.value})}\n              value={this.state.alternative_name}\n            />\n          </Item>\n\n          <Countries />\n          <Release />\n          <Authors />\n          <Artists />\n          <Genres />\n\n          <Item\n            label=\"Short Description\"\n          >\n            <TextArea\n              name=\"post_excerpt\"\n              onChange={(e) => this.setState({post_excerpt: e.target.value})}\n              rows={4}\n              value={this.state.post_excerpt}\n            />\n          </Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    ...state.terms,\n    info: state.cominovel.info,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) => bindActionCreators({\n  fetchTaxonomyTerms,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BasicInfo);\n","import { Button, Icon, PageHeader, Table, Upload } from \"antd\";\nimport React, { Component } from \"react\";\n\ninterface ChapterRow {\n}\n\ninterface IProps {\n}\n\ninterface IState {\n  isUploading: boolean;\n}\n\nclass Chapters extends Component<IProps, IState> {\n\n  public render() {\n    return (\n      <div className=\"cominovel-tab-content\">\n        <PageHeader\n          title=\"Chapters\"\n          subTitle=\"Danh sách các chapter hiện tại đang có\"\n          extra={[\n            <Button>\n              <Icon type=\"plus\" />\n              New Chapter\n            </Button>,\n          ]}\n        />\n        <Table columns={columns} dataSource={data} />\n      </div>\n    );\n  }\n}\n\nexport default Chapters;\n\nconst columns = [\n  {\n    dataIndex: \"no\",\n    editable: true,\n    render: (text: string) => <span>{text}</span>,\n    title: \"No.\",\n  },\n  {\n    dataIndex: \"thumbnail\",\n    render: (imageUrl: string) => {\n      const uploadButton = (\n        <div>\n          <Icon type=\"plus\" />\n          <div className=\"ant-upload-text\">Upload</div>\n        </div>\n      );\n      return (\n        <Upload\n          name=\"avatar\"\n          listType=\"picture-card\"\n          className=\"avatar-uploader\"\n          showUploadList={false}\n          action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n        >\n          { uploadButton }\n        </Upload>\n      );\n    },\n    title: \"Thumbnail\",\n    },\n  {\n    dataIndex: \"name\",\n    editable: true,\n    title: \"Name\",\n  },\n  {\n    dataIndex: \"season\",\n    render: () => (\n      <span>Vol 1</span>\n    ),\n    title: \"Season\",\n  },\n  {\n    dataIndex: \"createdAt\",\n    title: \"Upload Date\",\n  },\n  {\n    render: (text: string, record: ChapterRow) => (\n      <div>\n        <a href=\"/wp-admin/post.php?post=14290&action=edit\">\n          <Button icon=\"edit\" style={{marginRight: 10}} />\n        </a>\n        <Button type=\"danger\" icon=\"delete\" />\n      </div>\n    ),\n    title: \"Action\",\n  },\n];\n\nconst data: ChapterRow[] = [\n  {\n    author: \"Puleeno Nguyen\",\n    createdAt: \"2019-09-09 10:00\",\n    name: \"John Brown\",\n    no: 1,\n    season: \"Season 1\",\n    thumbnail: \"\",\n  },\n  {\n    author: \"Puleeno Nguyen\",\n    createdAt: \"2019-09-09 10:00\",\n    name: \"Jim Green\",\n    no: 2,\n    season: \"Season 2\",\n    thumbnail: \"\",\n  },\n  {\n    author: \"Puleeno Nguyen\",\n    createdAt: \"2019-09-09 10:00\",\n    name: \"Joe Black\",\n    no: 3,\n    season: \"Season 3\",\n    thumbnail: \"\",\n  },\n];\n","import { Button, Checkbox, Col, Icon, PageHeader, Radio, Row, Select, Upload } from \"antd\";\nimport React, { Component, FormEvent } from \"react\";\nimport { IFileInfo } from \"../interfaces/Composer\";\nimport Form from \"./antd/Form\";\n\ninterface IProps {\n  form: any;\n}\n\nclass Composer extends Component<IProps> {\n  public handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    this.props.form.validateFields((err: any, values: any) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n      }\n    });\n  }\n\n  public normFile = (e: IFileInfo) => {\n    console.log(\"Upload event:\", e);\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  }\n\n  public render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 14 },\n    };\n    return (\n      <div className=\"cominovel-tab-content\">\n        <PageHeader title=\"Composer\" subTitle=\"Trình biên soạn chapter cho truyện\" />\n        <Form\n          {...formItemLayout}\n          labelAlign=\"left\"\n        >\n          <Form.Item label=\"Cloud Storage\">\n            {getFieldDecorator(\"checkbox-group\", {\n              initialValue: [\"A\", \"B\"],\n            })(\n              <Checkbox.Group style={{ width: \"100%\" }}>\n                <Row>\n                  <Col span={8}>\n                    <Checkbox value=\"A\">A</Checkbox>\n                  </Col>\n                  <Col span={8}>\n                    <Checkbox disabled value=\"B\">\n                      B\n                    </Checkbox>\n                  </Col>\n                  <Col span={8}>\n                    <Checkbox value=\"C\">C</Checkbox>\n                  </Col>\n                  <Col span={8}>\n                    <Checkbox value=\"D\">D</Checkbox>\n                  </Col>\n                  <Col span={8}>\n                    <Checkbox value=\"E\">E</Checkbox>\n                  </Col>\n                </Row>\n              </Checkbox.Group>,\n            )}\n          </Form.Item>\n\n          <Form.Item\n            label=\"Season\"\n          >\n            <Select\n              showSearch\n              style={{ width: 200 }}\n              placeholder=\"Select comic type\"\n              optionFilterProp=\"children\"\n              filterOption={(input: string, option: any) =>\n                option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n              }\n            >\n              <Select.Option value=\"manga\">Manga</Select.Option>\n              <Select.Option value=\"manhua\">Manhua</Select.Option>\n              <Select.Option value=\"manhwa\">Manhwa</Select.Option>\n            </Select>\n          </Form.Item>\n\n          <Form.Item\n            label=\"ZIP Mode\"\n          >\n            {getFieldDecorator(\"radio-button\")(\n              <Radio.Group>\n                <Radio.Button value=\"a\">Auto</Radio.Button>\n                <Radio.Button value=\"c\">Single Chapter</Radio.Button>\n                <Radio.Button value=\"b\">Multi Chapter</Radio.Button>\n              </Radio.Group>,\n            )}\n          </Form.Item>\n\n          <Form.Item\n            label=\"Upload\"\n          >\n            {getFieldDecorator(\"dragger\", {\n              valuePropName: \"fileList\",\n              getValueFromEvent: this.normFile,\n            })(\n              <Upload.Dragger name=\"files\" action=\"/upload.do\">\n                <p className=\"ant-upload-drag-icon\">\n                  <Icon type=\"inbox\" />\n                </p>\n                <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                <p className=\"ant-upload-hint\">Support for a single or bulk upload.</p>\n              </Upload.Dragger>,\n            )}\n          </Form.Item>\n\n          <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Compose\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst WrappedComposer = Form.create({ name: \"validate_other\" })(Composer);\n\nexport default WrappedComposer;\n","import { Button,  Icon, Input, PageHeader } from \"antd\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {  AnyAction, bindActionCreators, Dispatch } from \"redux\";\nimport { fetchSeasons } from \"../actions\";\nimport { IRootState } from \"../reducers\";\nimport Form from \"./antd/Form\";\n\nlet id = 0;\ninterface IFormProps {\n  form: any;\n}\n\ntype IProps = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispacthToProps> & IFormProps;\n\nconst formItemLayout = {\n  labelCol: {\n    sm: { span: 5 },\n    xs: { span: 24 },\n  },\n  wrapperCol: {\n    sm: { span: 12 },\n    xs: { span: 24 },\n  },\n};\n\nclass Seasons extends Component<IProps> {\n  public remove = (k: string) => {\n    const { form } = this.props;\n    // can use data-binding to get\n    const keys = form.getFieldValue(\"keys\");\n    // We need at least one passenger\n    if (keys.length === 1) {\n      return;\n    }\n\n    // can use data-binding to set\n    form.setFieldsValue({\n      keys: keys.filter((key: string) => key !== k),\n    });\n  }\n\n  public add = () => {\n    const { form } = this.props;\n    // can use data-binding to get\n    const keys = form.getFieldValue(\"keys\");\n    const nextKeys = keys.concat(id++);\n    // can use data-binding to set\n    // important! notify form to detect changes\n    form.setFieldsValue({\n      keys: nextKeys,\n    });\n  }\n\n  public componentDidMount() {\n    this.props.fetchSeasons(window.Cominovel.currentID);\n  }\n\n  public renderSeasons() {\n    const { getFieldDecorator, getFieldValue } = this.props.form;\n    getFieldDecorator(\"keys\", { initialValue: [] });\n    const keys = getFieldValue(\"keys\");\n\n    return keys.map((k: string, index: number) => (\n      <Form.Item\n        {...formItemLayout}\n        label={`Seasons ${index + 1}`}\n        required={false}\n        key={k}\n      >\n        {getFieldDecorator(`names[${k}]`, {\n          rules: [\n            {\n              message: \"Please input season name or delete this field.\",\n              required: true,\n              whitespace: true,\n            },\n          ],\n          validateTrigger: [\"onChange\", \"onBlur\"],\n        })(<Input placeholder=\"Season name\" style={{ width: \"60%\", marginRight: 8 }} />)}\n        {keys.length > 1 ? (\n          <Icon\n            className=\"dynamic-delete-button\"\n            type=\"minus-circle-o\"\n            onClick={() => this.remove(k)}\n          />\n        ) : null}\n      </Form.Item>\n    ));\n  }\n\n  public saveSeason = () => {\n  }\n\n  public render() {\n\n    return (\n      <div className=\"cominovel-tab-content\">\n        <PageHeader title=\"Seasons\" subTitle=\"Biên soạn season cho truyện\" />\n        <Form\n          {...formItemLayout}\n          labelAlign=\"left\"\n        >\n          {this.renderSeasons()}\n          <Form.Item>\n            <Button type=\"dashed\" onClick={this.add} style={{ width: \"60%\" }}>\n              <Icon type=\"plus\" /> Add New Season\n            </Button>\n          </Form.Item>\n          <Form.Item>\n            <Button size=\"large\" type=\"primary\" htmlType=\"submit\" onClick={this.saveSeason}>\n              Save\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: IRootState) => ({\n  seasons: state.seasons,\n});\n\nconst mapDispacthToProps = (dispatch: Dispatch<AnyAction>) => bindActionCreators({\n  fetchSeasons,\n}, dispatch);\n\nconst WrappedDynamicFieldSet = Form.create({ name: \"dynamic_form_item\" })(Seasons);\n\nexport default connect(mapStateToProps, mapDispacthToProps)(WrappedDynamicFieldSet);\n","import { Spin, Tabs } from \"antd\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { AnyAction, bindActionCreators, Dispatch } from \"redux\";\nimport { fetchCominovel } from \"./actions\";\nimport Setup from \"./bootstrap/Setup\";\nimport Advanced from \"./components/Advanced\";\nimport BasicInfo from \"./components/BasicInfo\";\nimport Chapters from \"./components/Chapters\";\nimport Composer from \"./components/Composer\";\nimport Seasons from \"./components/Seasons\";\nimport { IRootState } from \"./reducers\";\n\nconst { TabPane } = Tabs;\ntype IProps = ReturnType<typeof mapDispatchToProps> & ReturnType<typeof mapStateToProps>;\ninterface IState {\n  chapterLoaded: boolean;\n  seasonLoaded: boolean;\n}\n\nconst initState: IState = {\n  chapterLoaded: false,\n  seasonLoaded: false,\n};\n\nclass Cominovel extends Component<IProps, IState> {\n  public state: IState = initState;\n\n  public UNSAFE_componentWillMount() {\n    Setup.bootstrap();\n  }\n\n  public componentDidMount() {\n    if (typeof window.Cominovel.currentID === undefined) {\n      return;\n    }\n    this.props.fetchCominovel(window.Cominovel.currentID);\n  }\n\n  public handleModeChange = (tab: any) => {\n    if (tab === \"season\") {\n      this.setState({\n        seasonLoaded: true,\n      });\n    }\n    if (tab === \"chapter\") {\n      this.setState({\n        chapterLoaded: true,\n      });\n    }\n  }\n\n  public renderBasicInfos = () => (\n    <TabPane\n      tab=\"Basic Info\"\n      key=\"basic\"\n    >\n      <BasicInfo />\n    </TabPane>\n  )\n\n  public renderChapters = () => (\n    <TabPane\n      tab=\"Chapters\"\n      key=\"chapter\"\n    >\n      {this.state.chapterLoaded ? (<Chapters />) : null}\n    </TabPane>\n  )\n\n  public renderSeasons = () => (\n    <TabPane\n      tab=\"Seasons\"\n      key=\"season\"\n    >\n      {this.state.seasonLoaded ? (<Seasons />) : null}\n    </TabPane>\n  )\n\n  public renderAdvanced = () => (\n    <TabPane\n      tab=\"Advanced\"\n      key=\"advanced\"\n    >\n      <Advanced />\n    </TabPane>\n  )\n\n  public renderComposer = () => (\n    <TabPane\n      tab=\"Composer\"\n      key=\"composer\"\n    >\n      <Composer />\n    </TabPane>\n  )\n\n  public render() {\n    if (this.props.isLoaded === null) {\n      // ant-spin ant-spin-lg ant-spin-spinning\n      return (\n        <div className=\"cominovel-loading\">\n          <Spin size=\"large\" />\n        </div>\n      );\n    }\n    return (\n      <Tabs\n        defaultActiveKey=\"1\"\n        tabPosition=\"left\"\n        type=\"card\"\n        onChange={this.handleModeChange}\n      >\n        {this.renderBasicInfos()}\n        {this.renderChapters()}\n        {this.renderSeasons()}\n        {this.renderAdvanced()}\n        {this.renderComposer()}\n      </Tabs>\n    );\n  }\n}\n\nconst mapStateToProps = (state: IRootState) => ({\n  isLoaded: state.app.isLoaded,\n  seasons: state.seasons,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) => bindActionCreators({\n  fetchCominovel,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cominovel);\n","import React from \"react\";\nimport { IntlProvider } from \"react-intl\";\nimport Cominovel from \"./Cominovel\";\nimport { ICominovelProps } from \"./interfaces/CominovelProps\";\n\ndeclare global {\n  // tslint:disable-next-line: interface-name\n  interface Window {\n    Cominovel: ICominovelProps;\n  }\n}\n\nconst App: React.FC = () => {\n  return (\n    <IntlProvider locale=\"en\">\n      <Cominovel />\n    </IntlProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","\nimport { Action, AnyAction } from \"redux\";\nimport { Epic, ofType } from \"redux-observable\";\nimport { from } from \"rxjs\";\nimport { ajax } from \"rxjs/ajax\";\nimport { map, mergeMap } from \"rxjs/operators\";\nimport { fetchCominovelData, setAppStatus } from \"../actions\";\nimport { FETCH_COMINOVEL } from \"../actions/types\";\nimport store from \"../store\";\n\nconst fetchCominovelEpic: Epic<Action<any>, Action<any>, void> = (action$) => action$.pipe(\n    ofType(FETCH_COMINOVEL),\n    mergeMap(\n        (action: AnyAction) => from(\n            ajax.getJSON(\n              window.Cominovel.endpoints.fetchComic.replace(\"<post_id>\", action.payload),\n            ),\n        ).pipe(\n            map((response: any) => {\n                store.dispatch(setAppStatus(true));\n                return fetchCominovelData(response);\n            }),\n        ),\n    ),\n);\n\nexport default fetchCominovelEpic;\n","import { IS_LOADED } from \"../actions/types\";\n\nexport const setAppStatus = (status: boolean) => ({\n    payload: status,\n    type   : IS_LOADED,\n});\n","import { combineEpics } from \"redux-observable\";\n\nimport fetchCominovel from \"./cominovelEpics\";\nimport { fetchTaxonomyTerms } from \"./cominovelTaxonomies\";\nimport { getCominovelSeasonsViaAjax } from \"./seasonEpics\";\n\nexport default combineEpics(\n  fetchCominovel,\n  getCominovelSeasonsViaAjax,\n  fetchTaxonomyTerms,\n);\n","import { Action, AnyAction } from \"redux\";\nimport { Epic, ofType } from \"redux-observable\";\nimport { from } from \"rxjs\";\nimport { ajax } from \"rxjs/ajax\";\nimport { map, mergeMap } from \"rxjs/operators\";\nimport { fetchSeasons, fetchSeasonsFullFilled } from \"../actions\";\n\nexport const getCominovelSeasonsViaAjax:\n  Epic<Action<any>, Action<any>, void> = (action$) => action$.pipe(\n    ofType(fetchSeasons),\n    mergeMap(\n      (action: AnyAction) => from(\n        ajax.getJSON(`http://loveofboys.io/wp-json/cominovel/v1/comic/${action.payload}`),\n      ).pipe(\n        map((response: any) => fetchSeasonsFullFilled(response)),\n      ),\n    ),\n  );\n","import { Action, AnyAction } from \"redux\";\nimport { Epic, ofType } from \"redux-observable\";\nimport { from } from \"rxjs\";\nimport { ajax } from \"rxjs/ajax\";\nimport { map, mergeMap } from \"rxjs/operators\";\nimport { fetchTaxonomyTermsFullFilled } from \"../actions\";\nimport { FETCH_TAXONOMY_TERMS } from \"../actions/types\";\n\nexport const fetchTaxonomyTerms: Epic<Action<any>, Action<any>> = (action$) => action$.pipe(\n    ofType(FETCH_TAXONOMY_TERMS),\n    mergeMap(\n        (action: AnyAction) => {\n            const taxonomy = action.taxonomy || \"genre\";\n            return from(\n                ajax.getJSON(window.Cominovel.endpoints.wpv2 + taxonomy),\n            ).pipe(\n                map((response: any) => fetchTaxonomyTermsFullFilled(response, taxonomy, action.keyword)),\n            );\n        },\n    ),\n);\n","import { AnyAction } from \"redux\";\nimport { IS_LOADED } from \"../actions/types\";\n\nexport interface IAppState {\n    readonly isLoaded: boolean | null;\n}\n\nconst initState: IAppState = {\n    isLoaded: null,\n};\n\nexport const appState = (previousState: IAppState = initState, action: AnyAction): IAppState => {\n    switch (action.type) {\n        case IS_LOADED: {\n            return {\n                ...previousState,\n                isLoaded: action.payload,\n            };\n        }\n        default: {\n            return previousState;\n        }\n    }\n};\n","import { AnyAction } from \"redux\";\nimport { FETCH_COMINOVEL_FULLFILLED } from \"../actions/types\";\nimport { ICominovelData } from \"../interfaces/CominovelProps\";\n\nexport interface ICominovelState {\n    info: ICominovelData;\n}\n\nconst initState: ICominovelState = {\n    info: {\n        ID: 0,\n        alternative_name: \"\",\n        audult: \"\",\n        author: \"\",\n        badge: \"\",\n        chapters: [],\n        cmn_artist_terms: [],\n        cmn_author_terms: [],\n        cmn_country_terms: [],\n        cmn_release_terms: [],\n        cmn_status_terms: [],\n        genre_terms: [],\n        parent: 0,\n        post_content: \"\",\n        post_excerpt: \"\",\n        post_modified: \"\",\n        post_name: \"\",\n        post_parent: 0,\n        post_status: \"\",\n        post_title: \"\",\n        post_type: \"\",\n        rating_system: \"\",\n        season: \"\",\n        short_description: \"\",\n    },\n};\n\nexport function cominovelInfo(previewState: ICominovelState = initState, action: AnyAction): ICominovelState {\n    switch (action.type) {\n        case FETCH_COMINOVEL_FULLFILLED: {\n            const newState = {\n                ...previewState,\n                info: action.payload,\n            };\n            return newState;\n        }\n        default: {\n            return previewState;\n        }\n    }\n}\n","import { FETCH_TAXONOMY_TERMS_FULLFILLED } from \"../actions/types\";\nimport { ITaxonomyAction } from \"../interfaces/CominovelProps\";\n\nconst TaxonomyTerm = (state: any = {}, action: ITaxonomyAction) => {\n    if (action.type === FETCH_TAXONOMY_TERMS_FULLFILLED) {\n        return {\n            ...state,\n            [action.taxonomy]: action.payload,\n        };\n    }\n    return state;\n};\n\nexport default TaxonomyTerm;\n","import { AnyAction } from \"redux\";\nimport { FETCH_SEASONS_FULLFILLED } from \"../actions/types\";\nimport { ISeason } from \"../interfaces/CominovelProps\";\n\nexport interface ISeasonState {\n    seasons: ISeason[];\n}\n\nconst initState: ISeasonState = {\n    seasons: [],\n};\n\nexport function seasons(previewState: ISeasonState = initState, action: AnyAction) {\n    if (action.type === FETCH_SEASONS_FULLFILLED) {\n        return action.payload;\n    }\n    return previewState;\n}\n","import { combineReducers } from \"redux\";\n\nimport { appState, IAppState } from \"./appReducer\";\nimport { cominovelInfo, ICominovelState } from \"./cominovelReducer\";\nimport TaxonomyTerm from \"./cominovelTaxonomy\";\nimport { ISeasonState, seasons } from \"./seasonReducer\";\n\nexport interface IRootState {\n    app: IAppState;\n    cominovel: ICominovelState;\n    seasons: ISeasonState;\n    terms: any;\n}\n\nconst reducers = combineReducers({\n    app: appState,\n    cominovel: cominovelInfo,\n    seasons,\n    terms: TaxonomyTerm,\n});\n\nexport default reducers;\n","import { applyMiddleware, createStore } from \"redux\";\nimport { createEpicMiddleware } from \"redux-observable\";\nimport rootEpics from \"./epics\";\nimport rootReducers from \"./reducers\";\n\nconst epicMiddleware = createEpicMiddleware();\n\nconst store = createStore(\n    rootReducers,\n    {},\n    applyMiddleware(epicMiddleware),\n);\n\nepicMiddleware.run(rootEpics);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"cominovel\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}